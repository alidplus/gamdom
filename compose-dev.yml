x-environment: &common-env
  PORT: 3000
  ORIGIN: http://127.0.0.1:8080
  DATABASE_URL: postgresql://postgres:secure_secure_secure_postgres@db:5432/gamdom
 
services:
  db:
    container_name: db
    restart: always
    image: postgres:15-alpine
    volumes:
      - postgres:/data/postgres
    environment:
      - POSTGRES_PASSWORD=secure_secure_secure_postgres
      - PGDATA=/data/postgres
      - POSTGRES_DB=gamdom
    ports:
      - 45432:5432

  api:
    container_name: api
    volumes:
      - workspace:/var/workspace
    build:
      context: .
      dockerfile_inline: |
        FROM node:20.19.1-slim
        RUN npm install -g corepack
        RUN corepack enable
        WORKDIR '/var/workspace'
        CMD ["yarn", "workspace", "api", "dev"]
    ports:
      - "3000:3000"
    environment:
      <<: *common-env
    depends_on:
      - db

  proxy:
    container_name: nginx
    build:
      context: "configs/nginx"
      dockerfile_inline: |
        FROM nginx:1.28.0-alpine
        COPY default.conf /etc/nginx/conf.d/default.conf

    ports:
      - 8080:80
      - 3032:3032
    depends_on:
      - api
      # - app
    develop:
      resources:
        limits:
          cpus: '0.01'
          memory: 50M
      watch:
        - action: sync+restart
          path: ./configs/nginx/default.conf
          target: /etc/nginx/conf.d/default.conf

volumes:
  postgres:
    driver: local
  workspace:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: .
      o: bind